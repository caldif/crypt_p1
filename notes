you have to store the salt not securely, salt dictionary key can just be key
same password and same salt generate the same key
you have to store something about the password securely
encrypting whole dictionary

key can be locally stored
padding must be used
can store something derrived from the password
hamac for swap attacks

k <-gen(password, SALT, etc)>
HMAC(k, "dummy")



How to decrypt: 
- Decrypt title with HMAC, use the HMAC key derived from the main key 

- grab the note up until MAX_NOTE_LEN
- decrypt what's left with HMAC, use a new key derived from the main key (?)
- that should give you the length
- decrypt the first chunk with AESGCM (use associated data)
- now you read the decryption up until the length 